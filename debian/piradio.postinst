#!/bin/bash 
# Radio daemon post install script
# $Id: piradio.postinst,v 1.13 2014/07/21 07:56:34 bob Exp $

# File locations
DIR=/usr/share/piradio
RADIOLIB=/var/lib/radiod
INITTAB=/etc/inittab
BOOTCMD=/boot/cmdline.txt 
MODULES=/etc/modules
MPDCONF=/etc/mpd.conf
PODCASTSDIST=podcasts.dist
LOGDIR=/var/log



set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package



# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

case "$1" in
    configure)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	exit 0
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# Display types
db_get piradio/selectlcd
echo "LCD = $RET"
db_get piradio/selectuser
echo "user = $RET"
db_get piradio/selectgroup
echo "group = $RET"
exit 1
LCD=3   # LCD screen (direct)
ADA=4   # Adafruit LCD plate
PIFACE=5 # Piface Control & Display

echo "Executing post install script ${0}"
update-rc.d -f piradio defaults
sudo mkdir -p ${DIR}/playlists
sudo chown -R pi:pi ${DIR}
sudo chmod +x ${DIR}/*.py

# Set up daemon
${DIR}/select_daemon.sh
TYPE=$?	# Don't seperate from above

# Disable serial interface (reboot required)
if [[ ${TYPE} -eq ${LCD} ]]; then
	echo "Disabling serial interface in ${INITTAB}" 
	if [[ ! -f   ${INITTAB}.orig ]]; then
		sudo cp -f ${INITTAB} ${INITTAB}.orig
		echo "# Original file stored as ${INITTAB}.orig" >> ${INITTAB} 
	fi
	OLDENTRY="T0\:23\:respawn\:\/sbin\/getty -L ttyAMA0"
	NEWENTRY="\#T0\:23:respawn\:\/sbin\/getty -L ttyAMA0 115200 vt100"
	sudo sed -i "s/^${OLDENTRY}.*/${NEWENTRY}/g" ${INITTAB}

	echo "Disabling serial interface in ${BOOTCMD}" 
	if [[ ! -f   ${BOOTCMD}.orig ]]; then
		sudo cp -f ${BOOTCMD} ${BOOTCMD}.orig
		echo "# Original file stored as ${BOOTCMD}.orig" >> ${BOOTCMD} 
	fi

	OLDENTRY="console=ttyAMA0,115200 "
	sudo sed -i "s/${OLDENTRY}//g" ${BOOTCMD}
	OLDENTRY="kgdboc=ttyAMA0,115200 "
	sudo sed -i "s/${OLDENTRY}//g" ${BOOTCMD}
	REBOOT=1

elif [[ ${TYPE} -eq ${ADA} ]]; then
	
	if [[ ! -f   ${MODULES}.orig ]]; then
		sudo cp -fp ${MODULES} ${MODULES}.orig
		echo "i2c-bcm2708" >>  ${MODULES}
		echo "i2c-dev" >>  ${MODULES}
		echo "# Original file stored as ${MODULES}.orig" >> ${MODULES} 
		echo
	fi
elif [[ ${TYPE} -eq ${PIFACE} ]]; then
	
	if [[ ! -f   ${MODULES}.orig ]]; then
		sudo cp -fp ${MODULES} ${MODULES}.orig
		echo "spi-bcm2708" >>  ${MODULES}
		echo "spi-dev" >>  ${MODULES}
		echo "# Original file stored as ${MODULES}.orig" >> ${MODULES} 
		echo
	fi
	REBOOT=1

else 
	echo "No radio daemon selected"
	echo "Run ${DIR}/select_daemon.sh at the end of this installation"
fi

# Configure the MPD daemon
if [[ ! -f   ${MPDCONF}.orig ]]; then
	echo "Modifying ${MPDCONF}"
	sudo cp -fp ${MPDCONF} ${MPDCONF}.orig
	OLDENTRY="bind_to_address"
	NEWENTRY="bind_to_address \"any\""  
	sudo sed -i "s/^${OLDENTRY}.*/${NEWENTRY}/g" ${MPDCONF}
	OLDENTRY="\#zeroconf_enabled.*"
	NEWENTRY="zeroconf_enabled \"no\""
	sudo sed -i "s/^${OLDENTRY}.*/${NEWENTRY}/g" ${MPDCONF}
	echo "# Original file stored as ${MPDCONF}.orig" >> ${MPDCONF} 
fi

# Disable mpd on startup
#sudo update-rc.d mpd disable

# Go to radio directory
cd ${DIR}

# Copy podcast example to the radio lib directory
if [[ ! -f "${RADIOLIB}/podcasts" ]]; then
	echo "Copying ${PODCASTSDIST} to ${RADIOLIB}/podcasts"
	mkdir -p ${RADIOLIB}
	cp -f ${PODCASTSDIST} ${RADIOLIB}/podcasts
fi

# Create playlists if no station list present
if [[ ! -f "${RADIOLIB}/stationlist" ]]; then
	echo "Creating playlists:"
	${DIR}/create_playlists.py --no_delete 2>&1 > ${LOGDIR}/playlists.log
	echo "See ${DIR}/playlists.log for information about playlists created"
	echo
fi

# End of installation
echo
echo "PI Radio software successfully installed"
echo "See /usr/share/doc/piradio/README for release information"
echo

if [[ ${TYPE} -eq ${ADA} ]]; then
	# Check to see if the python-smbus is already installed
	dpkg -l python-smbus  > /dev/null 2>&1  
	if [[ $? > 0 ]]; then  # Don't seperate from above
		echo "It is necessary to install the I2C libraries for Adafruit LCD plate"
		echo "Carry out the following command:"
		echo "   sudo apt-get install python-smbus"
		echo "and reboot the system"
		REBOOT=0
	else 
		REBOOT=1
	fi
fi

if [[ REBOOT -eq 1 ]]; then
	echo "It is necessary to reboot the system to start the radio"
fi

# End of post-installation script
